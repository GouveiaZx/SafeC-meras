import { supabaseAdmin } from './src/config/database.js';

async function checkRecentRecordings() {
  try {
    console.log('üîç Verificando grava√ß√µes recentes...');
    
    const { data: recordings, error } = await supabaseAdmin
      .from('recordings')
      .select('*')
      .order('created_at', { ascending: false })
      .limit(20);
    
    if (error) {
      console.error('‚ùå Erro ao buscar grava√ß√µes:', error);
      return;
    }
    
    console.log(`üìä Total de grava√ß√µes encontradas: ${recordings?.length || 0}`);
    
    if (recordings && recordings.length > 0) {
      console.log('\nüìã Grava√ß√µes recentes:');
      recordings.forEach((recording, index) => {
        console.log(`${index + 1}. ID: ${recording.id}`);
        console.log(`   C√¢mera: ${recording.camera_id}`);
        console.log(`   Arquivo: ${recording.filename}`);
        console.log(`   Status: ${recording.status}`);
        console.log(`   Criado em: ${recording.created_at}`);
        console.log(`   Tamanho: ${recording.file_size} bytes`);
        console.log(`   Dura√ß√£o: ${recording.duration}s`);
        console.log(`   Caminho: ${recording.file_path}`);
        console.log('   ---');
      });
    } else {
      console.log('‚ùå Nenhuma grava√ß√£o encontrada no banco de dados!');
    }
    
    // Verificar tamb√©m grava√ß√µes das √∫ltimas 24 horas
    const yesterday = new Date();
    yesterday.setDate(yesterday.getDate() - 1);
    
    const { data: recentRecordings, error: recentError } = await supabaseAdmin
      .from('recordings')
      .select('*')
      .gte('created_at', yesterday.toISOString())
      .order('created_at', { ascending: false });
    
    if (!recentError) {
      console.log(`\n‚è∞ Grava√ß√µes das √∫ltimas 24h: ${recentRecordings?.length || 0}`);
    }
    
  } catch (error) {
    console.error('‚ùå Erro geral:', error);
  }
}

checkRecentRecordings();