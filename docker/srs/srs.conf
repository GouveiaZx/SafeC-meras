# SRS Configuration for NewCAM
# See https://github.com/ossrs/srs/wiki/v4_CN_SampleRTMP

listen              1935;
max_connections      1000;
srs_log_tank         file;
srs_log_level        trace;
srs_log_file         ./objs/srs.log;
daemon               off;
utc_time             false;
work_dir             ./;
pid                  ./objs/srs.pid;

# HTTP API configuration
http_api {
    enabled         on;
    listen          1985;
    crossdomain     on;
}

# HTTP Server configuration
http_server {
    enabled         on;
    listen          8080;
    dir             ./objs/nginx/html;
    crossdomain     on;
}

# Stats configuration
stats {
    network         0;
    disk            sda vda xvda xvdb;
}

# RTMP configuration
vhost __defaultVhost__ {
    # Enable HLS
    hls {
        enabled         on;
        hls_path        ./objs/nginx/html;
        hls_fragment    2;
        hls_window      10;
        hls_on_error    ignore;
        hls_storage     disk;
        hls_wait_keyframe on;
        hls_acodec      aac;
        hls_vcodec      h264;
        hls_cleanup     on;
        hls_dispose     30;
        hls_nb_notify   10;
        hls_m3u8_file   [app]/[stream].m3u8;
        hls_ts_file     [app]/[stream]-[seq].ts;
    }
    
    # Enable HTTP-FLV
    http_remux {
        enabled     on;
        mount       [vhost]/[app]/[stream].flv;
    }
    
    # Enable DVR (recording)
    dvr {
        enabled         off;
        dvr_path        ./objs/nginx/html/[app]/[stream]/[2006]/[01]/[02]/[stream].[timestamp].flv;
        dvr_plan        session;
        dvr_duration    30;
        dvr_wait_keyframe on;
    }
    
    # Security settings
    security {
        enabled         off;
        seo {
            enabled         on;
            summary         "NewCAM Streaming Server";
            description     "Sistema de vigilância por câmeras IP";
            keywords        "streaming, rtmp, hls, surveillance, cameras";
        }
    }
    
    # Transcode settings (disabled by default for performance)
    transcode {
        enabled     off;
        ffmpeg      ./objs/ffmpeg/bin/ffmpeg;
        engine ff {
            enabled         off;
            vfilter {
                v               quiet;
            }
            vcodec          libx264;
            vbitrate        1000;
            vfps            25;
            vwidth          1280;
            vheight         720;
            vthreads        1;
            vprofile        main;
            vpreset         medium;
            vparams {
                t               100;
            }
            acodec          aac;
            abitrate        70;
            asample_rate    44100;
            achannels       2;
            aparams {
            }
            output          rtmp://127.0.0.1:[port]/[app]?vhost=[vhost]/[stream]_[engine];
        }
    }
    
    # Forward settings
    forward {
        enabled         off;
        destination     127.0.0.1:1936;
    }
    
    # Play settings
    play {
        gop_cache       on;
        queue_length    10;
        time_jitter     full;
        mix_correct     off;
        atc             off;
        atc_auto        off;
        mw_latency      100;
        mw_msgs         0;
        realtime        off;
        send_min_interval 10.0;
        reduce_sequence_header on;
    }
    
    # Publish settings
    publish {
        parse_sps       on;
        mr              off;
        mr_latency      350;
        firstpkt_timeout 20000;
        normal_timeout  5000;
        kickoff_for_optimize on;
    }
    
    # Refer settings
    refer {
        enabled         off;
        all             off;
        publish         off;
        play            off;
    }
    
    # Bandwidth settings
    bandcheck {
        enabled         off;
        key             "35c9b402c12a7246868752e2878f7e0e";
        interval        30;
        limit_kbps      4000;
    }
    
    # Chunk size
    chunk_size      60000;
    
    # TCP nodelay
    tcp_nodelay     on;
    
    # Min latency
    min_latency     on;
    
    # Publish 1st packet timeout
    publish_1stpkt_timeout 20000;
    
    # Publish normal packet timeout
    publish_normal_timeout 5000;
}

# Special vhost for low latency
vhost lowlatency.newcam.local {
    tcp_nodelay     on;
    min_latency     on;
    
    play {
        gop_cache       off;
        queue_length    3;
        time_jitter     off;
        mix_correct     off;
        atc             on;
        atc_auto        on;
        mw_latency      100;
        mw_msgs         0;
        realtime        on;
        send_min_interval 0.0;
        reduce_sequence_header on;
    }
    
    publish {
        parse_sps       on;
        mr              on;
        mr_latency      100;
        firstpkt_timeout 20000;
        normal_timeout  5000;
        kickoff_for_optimize on;
    }
    
    hls {
        enabled         on;
        hls_path        ./objs/nginx/html;
        hls_fragment    1;
        hls_window      3;
        hls_on_error    ignore;
        hls_storage     disk;
        hls_wait_keyframe on;
        hls_acodec      aac;
        hls_vcodec      h264;
        hls_cleanup     on;
        hls_dispose     10;
        hls_nb_notify   3;
        hls_m3u8_file   [app]/[stream].m3u8;
        hls_ts_file     [app]/[stream]-[seq].ts;
    }
    
    http_remux {
        enabled     on;
        mount       [vhost]/[app]/[stream].flv;
    }
}

# Heartbeat configuration
heartbeat {
    enabled         off;
    interval        30;
    url             http://host.docker.internal:3001/api/srs/heartbeat;
    device_id       "newcam-srs-001";
    summaries       off;
}

# HTTP hooks
http_hooks {
    enabled         on;
    on_connect      http://host.docker.internal:3001/api/srs/on_connect;
    on_close        http://host.docker.internal:3001/api/srs/on_close;
    on_publish      http://host.docker.internal:3001/api/srs/on_publish;
    on_unpublish    http://host.docker.internal:3001/api/srs/on_unpublish;
    on_play         http://host.docker.internal:3001/api/srs/on_play;
    on_stop         http://host.docker.internal:3001/api/srs/on_stop;
    on_dvr          http://host.docker.internal:3001/api/srs/on_dvr;
    on_hls          http://host.docker.internal:3001/api/srs/on_hls;
    on_hls_notify   http://host.docker.internal:3001/api/srs/on_hls_notify;
}